settings:
  width: 100
  height: 28
  title: TSP Solver Demo

  # Custom-Bash mit eindeutigem Prompt wie im full-example.yaml
  shell:
    program: bash
    args:
      - --rcfile
      - ~/.bashrc
    prompt: AUTOCAST_PROMPT
    line_split: ' \'
    quit_command: exit

  # Env wie im Beispiel: setzt PS1 und schaltet bracketed paste ab
  environment:
    - name: PROMPT_COMMAND
      value: "PS1=AUTOCAST_PROMPT; unset PROMPT_COMMAND; bind 'set enable-bracketed-paste off'"

  # Anzeige-Prompts im Cast (optisch)
  prompt: "$ "
  secondary_prompt: "> "

  # Default Tippgeschwindigkeit (nur für !Command / Keys ohne Override)
  type_speed: 100ms

  # Timeout bis zum Shell-Prompt
  timeout: 30s

instructions:
  # Interaktive Sequenz:
  # python3 tsp_solver.py
  # Enter, Enter, "all", 5x Right, "q"
  - !Interactive
    command: python3 tsp_solver.py
    # Für ESC-[-C Sequenzen kein Delay zwischen den Zeichen
    type_speed: 80ms
    keys:
      # 1) Enter
      - 600ms
      - ^J          # Enter = LF (alternativ: ^M für CR)
      # 2) Enter
      - 600ms
      - ^J
      # 3) "all"
      - 600ms
      - a
      - l
      - l
      # 4) fünfmal Pfeil rechts: ESC [ C
      - 600ms
      - ^[
      - "["
      - C
      - ^[
      - "["
      - C
      - ^[
      - "["
      - C
      - ^[
      - "["
      - C
      - ^[
      - "["
      - C
      # 5) 'q'
      - 600ms
      - q
      # Ende: Programm muss selbst beenden → Bash-Prompt kehrt zurück

  # kleine optische Pause vorm Ende
  - !Wait 1200ms
